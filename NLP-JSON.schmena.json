{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "The NLP-JSON Schema",
  "type": "object",
  "definitions": {
    "tokenIdList": {
      "type": "array",
      "description": "Token id lists cannot be empty",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "integer"
      }
    },
    "tokenIdsWithHead": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "head",
        "tokens"
      ],
      "properties": {
        "head": {
          "type": "integer"
        },
        "tokens": {
          "$ref": "#/definitions/tokenIdList"
        }
      }
    },
    "nodeIdList": {
      "type": "array",
      "description": "Node id lists can be empty",
      "uniqueItems": true,
      "items": {
        "type": "integer"
      }
    },
    "scores": {
      "description": "Confidence levels of a particular attribute",
      "type": "object",
      "patternProperties": {
        "^[A-Za-z]+$": {
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "features": {
      "description": "Linguistic features, corresponding to the ConLL format",
      "type": "object",
      "patternProperties": {
        "^[A-Z0-9][A-Z0-9a-z]*(\\[[a-z0-9]+\\])?$": {
          "type": "string",
          "pattern": "^[A-Z0-9][a-zA-Z0-9]*$"
        }
      },
      "additionalProperties": false
    },
    "misc": {
      "description": "Miscellaneous features, corresponding to the ConLL format",
      "type": "object",
      "patternProperties": {
        "^[A-Z0-9][A-Z0-9a-z]*(\\[[a-z0-9]+\\])?$": {
          "type": "string",
          "pattern": "^[A-Z0-9][a-zA-Z0-9]*$"
        }
      },
      "additionalProperties": false
    },
    "label": {
      "type": "object",
      "required": ["type", "label"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "scores": {
          "$ref": "#/definitions/scores"
        }
      }
    },
    "labels": {
      "description": "Classification labels applied to a given section",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/label"
      }
    },
    "embeddings": {
      "description": "Allow for embeddings from multiple sources",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "vector",
          "model"
        ],
        "additionalProperties": false,
        "properties": {
          "vector": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "model": {
            "type": "string",
            "description": "Which model, language, version are these embeddings from?",
            "examples": [
              "USE",
              "Skip-Thought",
              "GloVe"
            ]
          }
        }
      }
    }
  },
  "required": [
    "DC.conformsTo",
    "documents"
  ],
  "additionalProperties": false,
  "properties": {
    "DC.conformsTo": {
      "$id": "#/properties/DC.conformsTo",
      "type": "number",
      "description": "The LingData Version Schema",
      "default": 0.1,
      "examples": [
        0.1
      ],
      "pattern": "^\\d+\\.\\d+(\\.\\d+)*$"
    },
    "DC.source": {
      "$id": "#/properties/DC.source",
      "type": "string",
      "description": "The NLP system from which this document was created",
      "examples": [
        "SCNLP",
        "CoreNLP",
        "SpaCy",
        "SyntaxNet",
        "AwesomeNLP"
      ],
      "pattern": "^(.+)$"
    },
    "DC.created": {
      "$id": "#/properties/DC.created",
      "type": "string",
      "description": "The parse time of the document, in ISO 8601 format",
      "examples": [
        "2018-11-09T13:03:27.789244"
      ],
      "pattern": "^(.+)$"
    },
    "DC.date": {
      "$id": "#/properties/DC.date",
      "type": "string",
      "description": "The time of the most recent modification to the document, in ISO 8601 format",
      "examples": [
        "2018-11-09T13:05:27.789244"
      ],
      "pattern": "^(.+)$"
    },
    "DC.creator": {
      "$id": "#/properties/DC.creator",
      "type": "string",
      "description": "The person at whose behest the document was parsed",
      "examples": [
        "Jane Smith"
      ],
      "pattern": "^(.+)$"
    },
    "DC.publisher": {
      "$id": "#/properties/DC.publisher",
      "type": "string",
      "description": "Organization associated with this parse",
      "examples": [
        "Indiana University"
      ],
      "pattern": "^(.+)$"
    },
    "DC.title": {
      "$id": "#/properties/DC.title",
      "type": "string",
      "description": "The title of the document parsed",
      "examples": [
        "Dublin Core",
        "dhsjuy5.txt"
      ],
      "pattern": "^(.+)$"
    },
    "DC.description": {
      "$id": "#/properties/DC.description",
      "type": "string",
      "examples": [
        "A website providing a metadata standard"
      ],
      "pattern": "^(.+)$"
    },
    "DC.identifier": {
      "$id": "#/properties/DC.identifier",
      "type": "string",
      "description": "Complete reference to the original document that was parsed",
      "examples": [
        "http://www.dublincore.org",
        "file:///dhsjuy5.txt"
      ],
      "pattern": "^(.+)$"
    },
    "DC.language": {
      "$id": "#/properties/DC.language",
      "type": "string",
      "description": "ISO 639-1 or 639-2 language specification",
      "examples": [
        "en, eng, dud (B)"
      ],
      "pattern": "^[a-z]{2}([a-z]( \\([BT]\\)?))?$"
    },
    "conll": {
      "description": "Metadata for parsing to and from CoNLL formats",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sentence_ids": {
          "description": "Are sentence ids provided for each sentence",
          "type": "boolean",
          "default": false
        }
      }
    },
    "documents": {
      "$id": "#/properties/documents",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Document ID",
            "pattern": "^.+$"
          },
          "text": {
            "$id": "#/properties/documents/text",
            "type": "string",
            "description": "The unprocessed text of the document",
            "examples": [
              "I fed my dog yesterday. He is the best."
            ],
            "pattern": "^(.+)$"
          },
          "embeddings": {
            "$ref": "#/definitions/embeddings"
          },
          "features": {
            "$ref": "#/definitions/features"
          },
          "scores": {
            "$ref": "#/definitions/scores"
          },
          "labels": {
            "$ref": "#/definitions/labels"
          },
          "paragraphs": {
            "$id": "#/properties/documents/paragraphs",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "tokens"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique paragraph ID"
                },
                "tokens": {
                  "$ref": "#/definitions/tokenIdList"
                },
                "embeddings": {
                  "$ref": "#/definitions/embeddings"
                },
                "features": {
                  "$ref": "#/definitions/features"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                },
                "labels": {
                  "$ref": "#/definitions/labels"
                }
              }
            }
          },
          "sentences": {
            "$id": "#/properties/documents/sentences",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "tokenFrom",
                "tokenTo"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique sentence ID"
                },
                "text": {
                  "type": "string",
                  "description": "The text of this sentence"
                },
                "translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "lang",
                      "text"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "lang": {
                        "type": "string",
                        "description": "Two-character language code",
                        "pattern": "[a-z]{2}"
                      },
                      "text": {
                        "type": "string"
                      }
                    }
                  }
                },
                "mainVerb": {
                  "type": "array",
                  "description": "Token Ids corresponding to the main verb",
                  "items": {
                    "type": "integer"
                  }
                },
                "subject": {
                  "type": "array",
                  "description": "Token Ids corresponding to the subject",
                  "items": {
                    "type": "integer"
                  }
                },
                "object": {
                  "type": "array",
                  "description": "Token Ids corresponding to the object",
                  "items": {
                    "type": "integer"
                  }
                },
                "tokenFrom": {
                  "type": "integer",
                  "description": "Start token, inclusive"
                },
                "tokenTo": {
                  "type": "integer",
                  "description": "End token, exclusive"
                },
                "tokens": {
                  "$ref": "#/definitions/tokenIdList"
                },
                "labels": {
                  "$ref": "#/definitions/labels"
                },
                "complex": {
                  "type": "boolean",
                  "default": false
                },
                "type": {
                  "type": "string",
                  "examples": [
                    "interrogative"
                  ],
                  "pattern": "^(interrogative|alternative_question|declarative_question|direct_question|indirect_question|display_question|echo_question|embedded_question|hypophora|leading_question|declarative|rhetorical_question|tag_question|wh_question|whimperative|yes_no_question)$"
                },
                "embeddings": {
                  "$ref": "#/definitions/embeddings"
                },
                "features": {
                  "$ref": "#/definitions/features"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                }
              }
            }
          },
          "clauses": {
            "$id": "#/properties/documents/clauses",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "sentenceId",
                "type",
                "mainVerb",
                "root",
                "tokens"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "sentenceId": {
                  "type": "string",
                  "description": "Reference to the containing sentence"
                },
                "type": {
                  "type": "string",
                  "examples": [
                    "matrix",
                    "complement",
                    "adjunct"
                  ],
                  "pattern": "^(matrix|complement|adjunct|relative)$"
                },
                "transitivity": {
                  "type": "string",
                  "examples": [
                    "transitive",
                    "intransitive",
                    "ditransitive"
                  ],
                  "pattern": "^(transitive|intransitive|ditransitive)$"
                },
                "negated": {
                  "type": "boolean",
                  "default": false
                },
                "mainVerb": {
                  "type": "array",
                  "description": "Token Ids corresponding to the main verb",
                  "items": {
                    "type": "integer"
                  }
                },
                "subject": {
                  "type": "array",
                  "description": "Token Ids corresponding to the subject",
                  "items": {
                    "type": "integer"
                  }
                },
                "object": {
                  "type": "array",
                  "description": "Token Ids corresponding to the object",
                  "items": {
                    "type": "integer"
                  }
                },
                "root": {
                  "description": "Token id corresponding to the root",
                  "type": "integer"
                },
                "tokens": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "features": {
                  "$ref": "#/definitions/features"
                },
                "embeddings": {
                  "$ref": "#/definitions/embeddings"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                },
                "labels": {
                  "$ref": "#/definitions/labels"
                }
              }
            }
          },
          "tokenList": {
            "$id": "#/properties/documents/tokenList",
            "type": "array",
            "description": "A list of tokens objects in the document",
            "minItems": 1,
            "items": {
              "$id": "#/properties/documents/tokenList/items",
              "type": "object",
              "description": "A single token",
              "required": [
                "id",
                "text"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Token ids start from 1, and are cumulative for the entire document.",
                  "minimum": 1
                },
                "text": {
                  "type": "string",
                  "description": "The character string consisting of the token text",
                  "examples": [
                    "This",
                    "is",
                    "a",
                    "schema"
                  ],
                  "pattern": "^(.+)$"
                },
                "features": {
                  "$ref": "#/definitions/features"
                },
                "misc": {
                  "$ref": "#/definitions/misc"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                },
                "lemma": {
                  "type": "string",
                  "pattern": "^(.+)$"
                },
                "stem": {
                  "type": "string",
                  "pattern": "^(.+)$"
                },
                "characterOffsetBegin": {
                  "type": "integer",
                  "description": "The inclusive character index in the sentence where this token begins"
                },
                "characterOffsetEnd": {
                  "type": "integer",
                  "description": "The exclusive character index in the sentence where this token ends"
                },
                "upos": {
                  "type": "string",
                  "description": "Universal part of speech tag",
                  "examples": [
                    "Noun",
                    "Verb"
                  ],
                  "pattern": "^(.+)$"
                },
                "xpos": {
                  "type": "string",
                  "description": "Language-specific part of speech tag",
                  "examples": [
                    "NNP",
                    "VBZ"
                  ],
                  "pattern": "^(.+)$"
                },
                "morphemes": {
                  "type": "array",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                },
                "shape": {
                  "type": "string",
                  "description": "Token shape",
                  "examples": ["Xxx", "xXxxX"],
                  "pattern": "^[xX]+$"
                },
                "entity": {
                  "type": "string",
                  "description": "The Named Entity label",
                  "examples": [
                    "GPE",
                    "PERSON",
                    "EMAIL"
                  ]
                },
                "entity_iob": {
                  "type": "string",
                  "description": "The Named Entity IOB Schema",
                  "examples": [
                    "I",
                    "O",
                    "B"
                  ],
                  "pattern": "^[IOB]$"
                },
                "lang": {
                  "type": "string",
                  "description": "ISO 639-2 language code",
                  "pattern": "^[a-z]{2,3}$"
                },
                "speaker": {
                  "type": "string",
                  "examples": [
                    "S1",
                    "S2"
                  ]
                },
                "synsets": {
                  "$id": "#/properties/documents/tokenList/items/properties/synsets",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "scores": {
                        "$ref": "#/definitions/scores"
                      },
                      "wordnetId": {
                        "type": "string",
                        "examples": [
                          "bank.n.01",
                          "bank.v.02"
                        ],
                        "pattern": "^[a-z_]+\\.[a-z]\\.\\d{2}$"
                      },
                      "neighbors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "synonyms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "antonyms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hypernyms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hyponyms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "examples": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "definition": {
                        "type": "string"
                      }
                    }
                  }
                },
                "embeddings": {
                  "$ref": "#/definitions/embeddings"
                },
                "characterEmbeddings": {
                  "$id": "#/properties/documents/tokenList/items/properties/characterEmbeddings",
                  "type": "array",
                  "description": "Store character embeddings as 2D matrix",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "vector"
                    ],
                    "properties": {
                      "model": {
                        "type": "string",
                        "pattern": "^(.+)$"
                      },
                      "vector": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "examples": [
                          [
                            [
                              0,
                              0,
                              1,
                              0
                            ],
                            [
                              1,
                              0,
                              0,
                              0
                            ],
                            [
                              1,
                              0,
                              0,
                              0
                            ]
                          ]
                        ]
                      }
                    }
                  }
                },
                "labels": {
                  "$ref": "#/definitions/labels"
                }
              }
            }
          },
          "dependenciesBasic": {
            "$id": "#/properties/documents/dependenciesBasic",
            "type": "array",
            "description": "Unlabeled arcs should be marked as unlabeled",
            "items": {
              "type": "object",
              "required": [
                "label",
                "governor",
                "dependent"
              ],
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Unlabeled arcs should be marked as unlabeled",
                  "default": "unlabeled",
                  "examples": [
                    "nsubj",
                    "unlabeled"
                  ],
                  "pattern": "^[a-z]+(:[a-z]+)?$"
                },
                "governor": {
                  "type": "integer",
                  "description": "Token Id corresponding to the governor"
                },
                "dependent": {
                  "type": "integer",
                  "description": "Token Id corresponding to the dependent"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                }
              }
            }
          },
          "dependenciesEnhanced": {
            "$id": "#/properties/documents/dependenciesEnhanced",
            "type": "array",
            "description": "Each item describes a labeled arc of the dependency graph.",
            "items": {
              "type": "object",
              "required": [
                "label",
                "governor",
                "dependent"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "description": "Unlabeled arcs should be marked as unlabeled",
                  "type": "string",
                  "examples": [
                    "nsubj",
                    "unlabeled",
                    "acl:relcl"
                  ],
                  "pattern": "^[a-z]+(:[a-z]+)?(:[\\p{Ll}\\p{Lm}\\p{Lo}\\p{M}]+(_[\\p{Ll}\\p{Lm}\\p{Lo}\\p{M}]+)*)?(:[a-z]+)?$"
                },
                "governor": {
                  "type": "integer",
                  "description": "Token Id corresponding to the governor"
                },
                "dependent": {
                  "type": "integer",
                  "description": "Token Id corresponding to the dependent"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                }
              }
            }
          },
          "coreferences": {
            "$id": "#/properties/documents/coreferences",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "representative",
                "referents"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                },
                "representative": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "head",
                    "tokens"
                  ],
                  "properties": {
                    "head": {
                      "type": "integer"
                    },
                    "entity": {
                      "type": "string",
                      "description": "What type of entity is this",
                      "examples": ["PERSON", "GPE"],
                      "pattern": ".+"
                    },
                    "tokens": {
                      "$ref": "#/definitions/tokenIdList"
                    }
                  }
                },
                "referents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "head",
                      "tokens"
                    ],
                    "properties": {
                      "head": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "description": "What type of reference is this",
                        "examples": ["coreference", "anaphora"],
                        "pattern": ".+"
                      },
                      "tokens": {
                        "$ref": "#/definitions/tokenIdList"
                      }
                    }
                  }
                }
              }
            }
          },
          "constituents": {
            "$id": "#/properties/documents/constituents",
            "type": "array",
            "items": {
              "type": "object",
              "$id": "#/properties/documents/constituents",
              "required": [
                "sentId",
                "labeledBracketing"
              ],
              "additionalProperties": false,
              "properties": {
                "scores": {
                  "$ref": "#/definitions/scores"
                },
                "sentId": {
                  "type": "integer"
                },
                "labeledBracketing": {
                  "type": "string",
                  "examples": [
                    "(ROOT (S (NP (NP (NNP Charles) (NNP Bradford)) (, ,) (NP (NP (DT an) (NN analyst)) (PP (IN with) (NP (NNP Merrill) (NNP Lynch) (NNP Capital) (NNP Markets)))) (, ,)) (VP (VBD said) (SBAR (S (NP (NNP USX)) (VP (MD may) (VP (VB have) (VP (VBN received) (NP (NP (NNS orders)) (VP (VBN lost) (PP (IN by) (NP (NP (NNS competitors)) (SBAR (WHNP (WP who)) (S (VP (VBD were) (VP (VBN involved) (PP (IN in) (NP (NN labor) (NNS contracts))) (NP-TMP (RBR earlier) (DT this) (NN year)))))))))))))))) (. .)))"
                  ],
                  "pattern": "^[(\\[]ROOT"
                },
                "enumeratedLabeledBracketing": {
                  "type": "string",
                  "examples": [
                    "(ROOT_0 (S_1 (NP_2 (NP_3 (NNP_4 Charles_5 ) (NNP_6 Bradford_7 )) (, ,) (NP (NP (DT an) (NN analyst)) (PP (IN with) (NP (NNP Merrill) (NNP Lynch) (NNP Capital) (NNP Markets)))) (, ,)) (VP (VBD said) (SBAR (S (NP (NNP USX)) (VP (MD may) (VP (VB have) (VP (VBN received) (NP (NP (NNS orders)) (VP (VBN lost) (PP (IN by) (NP (NP (NNS competitors)) (SBAR (WHNP (WP who)) (S (VP (VBD were) (VP (VBN involved) (PP (IN in) (NP (NN labor) (NNS contracts))) (NP-TMP (RBR earlier) (DT this) (NN year)))))))))))))))) (. .)))"
                  ],
                  "pattern": "^[(\\[]ROOT_0"
                },
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "tokenId",
                      "label",
                      "children"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Enumerated id of this node"
                      },
                      "tokenId": {
                        "description": "-1 if not a token",
                        "type": "integer"
                      },
                      "label": {
                        "type": "string",
                        "description": "The syntactic label of this node. Blank if a token",
                        "examples": [
                          "ROOT",
                          "",
                          "NNP"
                        ]
                      },
                      "children": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "dominates": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "precedes": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "scopes": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "cCommands": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "mCommands": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "binds": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "governs": {
                        "$ref": "#/definitions/nodeIdList"
                      },
                      "scores": {
                        "$ref": "#/definitions/scores"
                      }
                    }
                  }
                }
              }
            }
          },
          "expressions": {
            "$id": "#/properties/documents/expressions",
            "type": "array",
            "description": "Multi-word expressions, idioms, etc.",
            "items": {
              "type": "object",
              "required": [
                "tokens"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "tokens": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "integer"
                  }
                },
                "type": {
                  "type": "string",
                  "description": "Upper case",
                  "examples": [
                    "PERSON",
                    "NP",
                    "MERONYM"
                  ]
                },
                "head": {
                  "type": "integer",
                  "description": "The Head token of this expression"
                },
                "alternatePhrasing": {
                  "type": "string",
                  "pattern": "^(.+)$"
                },
                "dependency": {
                  "type": "string",
                  "description": "The dependency arc for this expression",
                  "pattern": "^(.+)$"
                },
                "scores": {
                  "$ref": "#/definitions/scores"
                }
              }
            }
          }
        }
      }
    }
  }
}
